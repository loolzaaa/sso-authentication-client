# Main configuration
spring.application.name=sso-authentication-client-example
server.port=8888

## Expose JMX endpoint for JWT secret key update endpoint
spring.jmx.enabled=true

# Datasource configuration
## In-memory H2 Database with console enabled
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# SSO Client configuration
## To enable SSO Client must define: applicationName, entryPointAddress, entryPointUri

## Application name for SSO
## Will be the main authority to access the application!
sso.client.applicationName=example

## SSO Server address
sso.client.entryPointAddress=http://localhost:9999
## SSO Server authentication URI
sso.client.entryPointUri=/login

## SSO Client endpoint
## Description can be accessed via GET /sso
sso.client.endpoint.enable=true

## Token Receiver configuration
## To enable token receiver must define: username, password
sso.client.receiver.username=admin
sso.client.receiver.password=pass

## Fingerprint of application for SSO Server
## Better define not empty for production purposes
sso.client.receiver.fingerprint=ru.loolzaaa.sso.client.sampleapp

# Basic authentication configuration
sso.client.basic.realmName=Example realm
sso.client.basic.users[0].username=user
sso.client.basic.users[0].password=password
sso.client.basic.users[0].authorities=user,test
sso.client.basic.requestMatchers[0].pattern=/api/get/basic1/**
sso.client.basic.requestMatchers[0].httpMethod=GET
sso.client.basic.requestMatchers[0].caseSensitive=false
sso.client.basic.requestMatchers[0].authorities=user

# Webhook configuration
sso.client.webhook.enable=true
sso.client.webhook.test.key=12345678

# Logging configuration
logging.level.ru.loolzaaa.sso.client=DEBUG